<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="ConcertReplyDao">
  
  	<insert id="insertOneReply"
  			parameterType="ConcertReplyVO">
	   INSERT	INTO CONCERT_REPLY (
	   							REPLY_ID
	   							, CONCERT_ID
	   							, CONTENT
	   							, CRT_DATE
	   							, EMAIL
	   							, PARENT_REPLY_ID
   							) 
		VALUES ( 
					 'CR-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24') || '-' || LPAD(CONCERT_REPLY_ID_SEQ.NEXTVAL, 6, '0')
					 , #{concertId}
					 , #{content}
					 , SYSDATE
					 , #{email} 
					 , #{parentReplyId}
				)
  	</insert>
  	
  	<resultMap type="ConcertReplyVO" id="concertReplyResultMap">
  		<id property="replyId" column="replyId"/>
  		<result property="level" column="LEVEL"/>
  		<result property="concertId" column="concertId"/>
  		<result property="content" column="CONTENT"/>
  		<result property="crtDate" column="crtDate"/>
  		<result property="email" column="EMAIL"/>
  		<result property="parentReplyId" column="parentReplyId"/>
  		<result property="isDelete" column="isDelete"/>
  		<association property="concertVO" javaType="ConcertVO">
  			<id property="concertId" column="CONCERT_ID"/>
			<result property="subject" column="SUBJECT"/>
			<result property="contents" column="CONTENTS"/>
			<result property="advanceBookingUrl" column="advanceBookingUrl"/>
			<result property="advanceBookingDay" column="advanceBookingDay"/>
  		</association>
  		<association property="memberVO" javaType="MemberVO" >
			<id property="email" column="M_EMAIL"/>
			<result property="name" column="NAME"/>
			<result property="email" column="LOGIN_FAIL_COUNT"/>
			<result property="latestLogin" column="LATEST_LOGIN"/>
			<result property="authority" column="AUTHORITY"/>
			<result property="loginFailCount" column="LOGIN_FAIL_COUNT"/>
		</association>
  	</resultMap>
  	
  	<select id="selectAllReplies"
  			resultMap="concertReplyResultMap">
  		SELECT	LEVEL
  				, R.REPLY_ID replyId
				, R.CONCERT_ID concertId
				, R.CONTENT
				, R.CRT_DATE crtDate
				, R.EMAIL
				, R.PARENT_REPLY_ID parentReplyId
				, R.IS_DELETE isDelete
				, C.CONCERT_ID 
				, C.SUBJECT
				, C.CONTENTS
				, C.ADVANCE_BOOKING_URL advanceBookingUrl
				, C.ADVANCE_BOOKING_DAY advanceBookingDay
				, R_M.EMAIL M_EMAIL
				, R_M.NAME
				, R_M.LOGIN_FAIL_COUNT
				, R_M.LATEST_LOGIN
				, R_M.AUTHORITY
		FROM 	CONCERT_REPLY R
				, CONCERT C
				, MEMBERS R_M
		WHERE	R.EMAIL = R_M.EMAIL
		AND		R.CONCERT_ID = C.CONCERT_ID
		AND		C.CONCERT_ID = #{concertId}
		START	WITH R.PARENT_REPLY_ID = '0'
		CONNECT BY PRIOR R.REPLY_ID = R.PARENT_REPLY_ID
  	</select>
  	
  	<select id="isChildReplyExist"
  			parameterType="ConcertReplyVO"
  			resultMap="concertReplyResultMap">
  		SELECT	LEVEL
  				, R.REPLY_ID replyId
				, R.CONCERT_ID concertId
				, R.CONTENT
				, R.CRT_DATE crtDate
				, R.EMAIL
				, R.PARENT_REPLY_ID parentReplyId
				, R.IS_DELETE isDelete
				, C.CONCERT_ID 
				, C.SUBJECT
				, C.CONTENTS
				, C.ADVANCE_BOOKING_URL advanceBookingUrl
				, C.ADVANCE_BOOKING_DAY advanceBookingDay
				, R_M.EMAIL M_EMAIL
				, R_M.NAME
				, R_M.LOGIN_FAIL_COUNT
				, R_M.LATEST_LOGIN
				, R_M.AUTHORITY
		FROM 	CONCERT_REPLY R
				, CONCERT C
				, MEMBERS R_M
		WHERE	R.EMAIL = R_M.EMAIL
		AND		R.CONCERT_ID = C.CONCERT_ID
		AND		C.CONCERT_ID = #{concertId}
		START	WITH R.PARENT_REPLY_ID = #{replyId}
		CONNECT BY PRIOR R.REPLY_ID = R.PARENT_REPLY_ID
  	</select>
  	
  	<select id="selectOneReply"
  			parameterType="string"
  			resultType="ConcertReplyVO">
  		SELECT	REPLY_ID replyId
				, CONCERT_ID concertId
				, CONTENT
				, CRT_DATE crtDate
				, EMAIL
  		FROM	CONCERT_REPLY
  		WHERE	REPLY_ID = #{replyId}
  	</select>
  	
  	<update id="updateOneReply"
  			parameterType="ConcertReplyVO">
  		UPDATE	CONCERT_REPLY
		SET  	CONTENT = #{content}
		WHERE	REPLY_ID = #{replyId}
  	</update>
  	  	
  	<update id="updateDeleteOneReply"
  			parameterType="string">
		UPDATE	CONCERT_REPLY
		SET		IS_DELETE = 'Y'
  		WHERE	REPLY_ID = #{replyId}
  	</update>
  </mapper>