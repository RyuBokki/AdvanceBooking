<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MemberDao">
  	<insert id="insertOneMember" parameterType="MemberVO">
  		INSERT INTO MEMBERS (
								NAME
								, PASSWORD
								, SALT
								, LOGIN_FAIL_COUNT
								, LATEST_LOGIN
								, AUTHORITY
								, EMAIL
							) 
		VALUES ( 
				#{name}
				, #{password}
				, #{salt}
				, 0
				, SYSDATE
				, 'USER'
				, #{email} 
				)
	</insert>

	<select id="selectOneMember" 
			parameterType="MemberVO"
			resultType="MemberVO">
		SELECT 	NAME
				, LOGIN_FAIL_COUNT
				, LATEST_LOGIN
				, AUTHORITY
				, EMAIL
		FROM	MEMBERS
		WHERE	EMAIL = #{email}
		AND		PASSWORD = #{password}
	</select>	
	
	<select id="isBlockUser"
			parameterType="string"
			resultType="_boolean">
		SELECT	COUNT(1)
		FROM	MEMBERS
		WHERE	LATEST_LOGIN + 1/24 >= SYSDATE
		AND		LOGIN_FAIL_COUNT > 4
		AND		EMAIL = #{email}
	</select>
	
	<select id="selectOneMemberByEmail"
			parameterType="string"
			resultType="MemberVO">
		SELECT	NAME
				, LOGIN_FAIL_COUNT
				, LATEST_LOGIN
				, AUTHORITY
				, EMAIL
		FROM	MEMBERS
		WHERE	EMAIL = #{email}
	</select>
	
	
	<update id="unBlockUser"
			parameterType="string">
		UPDATE	MEMBERS
		SET		LOGIN_FAIL_COUNT = 0
				, LATEST_LOGIN = SYSDATE
		WHERE	EMAIL = #{email}
	</update>
	
	<update id="increaseLoginFailCount"
			parameterType="string">
		UPDATE	MEMBERS
		SET		LOGIN_FAIL_COUNT = LOGIN_FAIL_COUNT + 1
				, LATEST_LOGIN = SYSDATE
		WHERE	EMAIL = #{email}
	</update>
	
	<select id="isDuplicatedEmail"
			parameterType="string"
			resultType="_boolean">
		SELECT	COUNT(1)
		FROM	MEMBERS
		WHERE	EMAIL = #{email}
	</select>
	
	<select id="getSaltByEmail"
			parameterType="string"
			resultType="string">
		SELECT	SALT
		FROM	MEMBERS
		WHERE	EMAIL = #{email}
	</select>
	
	<update id="updateOneMember"
			parameterType="MemberVO">
		UPDATE	MEMBERS
		SET		NAME = #{name}
				, PASSWORD = #{password}
				, SALT = #{salt}
		WHERE	EMAIL = #{email}
	</update>
	
	<update id="updateMemberPassword"
			parameterType="map">
		UPDATE	MEMBERS
		SET		PASSWORD = #{password}
				, SALT = #{salt}
		WHERE	EMAIL = #{email}
	</update>
	
	
	
</mapper>