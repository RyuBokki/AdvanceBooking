<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:s="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/security 
                  http://www.springframework.org/schema/security/spring-security-4.2.xsd">

   <s:http auto-config="true" use-expressions="true">
      <s:intercept-url pattern="/resources/**" access="permitAll"/>
      <s:intercept-url pattern="/" access="permitAll"/>
      <s:intercept-url pattern="/main" access="permitAll"/>      
      <s:intercept-url pattern="/memberlogin" access="permitAll"/>
      <s:intercept-url pattern="/member/loginSuccess" access="permitAll"/>
      <s:intercept-url pattern="/member/check/duplicate" access="permitAll"/>
      <s:intercept-url pattern="/member/loginFail" access="permitAll"/>
      <s:intercept-url pattern="/member/regist" access="permitAll"/>
      <s:intercept-url pattern="/member/findPassword" access="permitAll"/>
      <s:intercept-url pattern="/member/update" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/member/myPage" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/write" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/detail/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/list/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/imageUpload" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/imageDownload/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/detail/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/delete/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/qna/update/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/concert/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      <s:intercept-url pattern="/prefer/sendEmail/AdvanceBookingInfo/**" access="hasRole('ROLE_ADMIN')"/>
      
      <s:csrf disabled="true"/>
      
      <s:form-login 
         login-page="/main"
         username-parameter="email"
         password-parameter="password"
         login-processing-url="/memberlogin"
         default-target-url="/member/loginSuccess"
         authentication-failure-forward-url="/member/loginFail"
         always-use-default-target="true"
      />
      
      <s:logout
         logout-url="/memberlogout"
         logout-success-url="/main"
         invalidate-session="true"
      />
      
      <s:session-management invalid-session-url="/main">
         <s:concurrency-control
            max-sessions="1"
            expired-url="/main"
         />
      </s:session-management>
         
   </s:http>
   
   <bean id="userService"
        class="com.ktds.member.service.UserService">
   </bean>
   
   <s:authentication-manager>
      <s:authentication-provider ref="userService"/>
   </s:authentication-manager>

</beans>