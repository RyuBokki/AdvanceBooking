<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:s="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/security 
                  http://www.springframework.org/schema/security/spring-security-4.2.xsd">

   <s:http auto-config="true" use-expressions="true">
      <!-- url별 접근권한 설정 -->
      <!-- 해당 url만 권한을 준다 -->
      <s:intercept-url pattern="/resources/**" access="permitAll"/>
      <s:intercept-url pattern="/" access="permitAll"/>
      <!-- spring security를 만들어주는 url -->
      <s:intercept-url pattern="/memberlogin" access="permitAll"/>
      <s:intercept-url pattern="/member/login" access="permitAll"/>
      <s:intercept-url pattern="/member/regist" access="permitAll"/>
      <s:intercept-url pattern="/member/findPassword" access="permitAll"/>
<!--       <s:intercept-url pattern="/member" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/> -->
      <!-- member 이하의 모든 url -->
      <!-- <s:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/> -->
      <s:intercept-url pattern="/concert/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
      
      <!-- csrf 비활성화 -->
      <!-- csrf는 check하지 않겠다 -->
      <s:csrf disabled="true"/>
      
      <s:form-login 
         login-page="/member/login"
         username-parameter="email"
         password-parameter="password"
         login-processing-url="/memberlogin"
         default-target-url="/member/loginSuccess"
         authentication-failure-url="/member/loginFailure"
         always-use-default-target="true"
      />
      
      <s:logout
         logout-url="/memberlogout"
         logout-success-url="/member/login"
         invalidate-session="true"
      />
      
      <s:session-management invalid-session-url="/member/login">
         <s:concurrency-control
            max-sessions="1"
            expired-url="/member/login"
         />
      </s:session-management>
         
   </s:http>
   
   <!-- Spring Security가 처리할 인증 객체 생성 -->
   <bean id="userService"
        class="com.ktds.member.service.UserService">
   </bean>
   
   <!-- UserService 객체를 Spring Security authenticationManager에 등록 -->
   <s:authentication-manager>
      <s:authentication-provider ref="userService"/>
   </s:authentication-manager>

</beans>